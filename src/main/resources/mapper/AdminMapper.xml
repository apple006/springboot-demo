<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.Admin">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="VoResultMap" type="com.example.demo.vo.AdminVO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="BIT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, login_name, password, nick_name, create_time, last_login_time, status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from admin
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM admin
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.example.demo.model.Admin">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into admin (login_name, password, nick_name,
        create_time, last_login_time, status
        )
        values (#{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{createTime,jdbcType=BIGINT}, #{lastLoginTime,jdbcType=BIGINT}, #{status,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.Admin">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                login_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Admin">
        update admin
        <set>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Admin">
        UPDATE admin
        SET login_name      = #{loginName,jdbcType=VARCHAR},
            password        = #{password,jdbcType=VARCHAR},
            nick_name       = #{nickName,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=BIGINT},
            last_login_time = #{lastLoginTime,jdbcType=BIGINT},
            status          = #{status,jdbcType=BIT}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from admin
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <!-- my -->
    <select id="list" resultMap="VoResultMap">
        SELECT
            id,
            login_name,
            nick_name,
            create_time,
            last_login_time,
            status
        FROM admin
    </select>
</mapper>